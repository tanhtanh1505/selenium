{
  "stats": {
    "suites": 2,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "start": "2023-04-22T16:15:11.042Z",
    "end": "2023-04-22T16:15:13.086Z",
    "duration": 2044,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "c41d7b46-35c3-4586-8307-fe2881940454",
      "title": "",
      "fullFile": "/home/tanh/code/selenium/nodejs/index.js",
      "file": "/index.js",
      "beforeHooks": [],
      "afterHooks": [
        {
          "title": "\"after all\" hook in \"{root}\"",
          "fullTitle": "\"after all\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "if (seleniumServer) {\n  return seleniumServer.kill()\n}",
          "err": {},
          "uuid": "66aa5e94-95dc-4c2c-adf5-3779834a3197",
          "parentUUID": "c41d7b46-35c3-4586-8307-fe2881940454",
          "isHook": true,
          "skipped": false
        }
      ],
      "tests": [],
      "suites": [
        {
          "uuid": "4b7b55a3-71bf-4e96-af1b-3a1a5e3e9ae4",
          "title": "[chrome]",
          "fullFile": "/home/tanh/code/selenium/nodejs/index.js",
          "file": "/index.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "6a62d2ed-f034-4d57-b83f-e6e95cc716ca",
              "title": "TodoList Test",
              "fullFile": "/home/tanh/code/selenium/nodejs/index.js",
              "file": "/index.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"TodoList Test\"",
                  "fullTitle": "[chrome] TodoList Test \"before all\" hook in \"TodoList Test\"",
                  "timedOut": false,
                  "duration": 592,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "driver = await new Builder().forBrowser(\"chrome\").setChromeService(new chrome.ServiceBuilder(\"/usr/bin/chromedriver\")).build();",
                  "err": {},
                  "uuid": "97b25530-3d5a-41c9-94c1-fe56ce3ca3fb",
                  "parentUUID": "6a62d2ed-f034-4d57-b83f-e6e95cc716ca",
                  "isHook": true,
                  "skipped": false
                },
                {
                  "title": "\"before each\" hook in \"TodoList Test\"",
                  "fullTitle": "[chrome] TodoList Test \"before each\" hook in \"TodoList Test\"",
                  "timedOut": false,
                  "duration": 124,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await driver.get(url);\nlet title = await driver.getTitle();\nassert.equal(\"Todo App\", title);\nawait driver.manage().setTimeouts({ implicit: 500 });",
                  "err": {},
                  "uuid": "2f9ffc8c-3534-4755-ace4-ffe0020def8e",
                  "parentUUID": "6a62d2ed-f034-4d57-b83f-e6e95cc716ca",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after all\" hook in \"TodoList Test\"",
                  "fullTitle": "[chrome] TodoList Test \"after all\" hook in \"TodoList Test\"",
                  "timedOut": false,
                  "duration": 60,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await driver.quit()",
                  "err": {},
                  "uuid": "8bb89954-504c-4073-9c1e-43cefcd58e7c",
                  "parentUUID": "6a62d2ed-f034-4d57-b83f-e6e95cc716ca",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "add a todo item",
                  "fullTitle": "[chrome] TodoList Test add a todo item",
                  "timedOut": false,
                  "duration": 187,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let textBox = await driver.findElement(By.className(\"form-control\"));\nlet submitButton = await driver.findElement(By.className(\"btn btn-success\"));\nawait textBox.sendKeys(testCase.addItem.input);\nawait submitButton.click();\nlet listTodo = await driver.findElements(By.className(\"item false container-fluid\"));\nlet item = listTodo.find(async (item) => (await item.getText()) === testCase.addItem.input);\nlet output = await item.getText();\nassert.equal(testCase.addItem.expected, output);",
                  "err": {},
                  "uuid": "8c7b4ebf-24ad-4bce-af0b-ae735ff08bbd",
                  "parentUUID": "6a62d2ed-f034-4d57-b83f-e6e95cc716ca",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "mark a todo item as done",
                  "fullTitle": "[chrome] TodoList Test mark a todo item as done",
                  "timedOut": false,
                  "duration": 178,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let listTodo = await driver.findElements(By.className(\"item false container-fluid\"));\nlet item = listTodo.find(async (item) => (await item.getText()) === testCase.markItem.input);\nlet checkBox = await item.findElement(By.className(\"text-center col-1\"));\nawait checkBox.click();\nlistTodo = await driver.wait(async () => {\n  listTodo = await driver.findElements(By.className(\"item completed container-fluid\"));\n  return listTodo;\n}, 5000);\nitem = listTodo.find(async (item) => (await item.getText()) === testCase.markItem.input);\nlet output = await item.getText();\nassert.equal(testCase.markItem.expected, output);",
                  "err": {},
                  "uuid": "99f304ec-aede-4e50-8679-0bc8fd0add91",
                  "parentUUID": "6a62d2ed-f034-4d57-b83f-e6e95cc716ca",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "unmark a todo item",
                  "fullTitle": "[chrome] TodoList Test unmark a todo item",
                  "timedOut": false,
                  "duration": 143,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let listTodo = await driver.findElements(By.className(\"item completed container-fluid\"));\nlet item = listTodo.find(async (item) => (await item.getText()) === testCase.unmarkItem.input);\nlet checkBox = await item.findElement(By.className(\"text-center col-1\"));\nawait checkBox.click();\nlistTodo = await driver.wait(async () => {\n  listTodo = await driver.findElements(By.className(\"item false container-fluid\"));\n  return listTodo;\n}, 5000);\nitem = listTodo.find(async (item) => (await item.getText()) === testCase.unmarkItem.input);\nlet output = await item.getText();\nassert.equal(testCase.unmarkItem.expected, output);",
                  "err": {},
                  "uuid": "64c55f1a-a676-400b-b086-ec4a5f3f9317",
                  "parentUUID": "6a62d2ed-f034-4d57-b83f-e6e95cc716ca",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "delete a todo item",
                  "fullTitle": "[chrome] TodoList Test delete a todo item",
                  "timedOut": false,
                  "duration": 60,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let listTodo = await driver.findElements(By.className(\"item false container-fluid\"));\nlet item = listTodo.find(async (item) => (await item.getText()) === testCase.deleteItem.input);\nlet deleteButton = await item.findElement(By.className(\"text-center remove col-1\"));\nawait deleteButton.click();\nlistTodo = await driver.wait(async () => {\n  listTodo = await driver.findElements(By.className(\"item false container-fluid\"));\n  return listTodo;\n}, 5000);\nitem = listTodo.find(async (item) => (await item.getText()) === testCase.deleteItem.input);\nassert.notEqual(testCase.deleteItem.expected, item);",
                  "err": {},
                  "uuid": "dd44f08e-656a-4507-9eea-41af5b54f25f",
                  "parentUUID": "6a62d2ed-f034-4d57-b83f-e6e95cc716ca",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8c7b4ebf-24ad-4bce-af0b-ae735ff08bbd",
                "99f304ec-aede-4e50-8679-0bc8fd0add91",
                "64c55f1a-a676-400b-b086-ec4a5f3f9317",
                "dd44f08e-656a-4507-9eea-41af5b54f25f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 568,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 10000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "autoOpen": "true"
      },
      "version": "6.2.0"
    }
  }
}